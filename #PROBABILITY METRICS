##########################################
# Use in conjunction with Confusion Matrix
# to calculate Probability of correct 
# classification (Accuracy), Probability
# of False Positives, and Probability of
# False Negatives. 
# Takes inputs from Confusion Matrix to 
# determine values.
##########################################

# print out probability metrics


categories.append("Unclass")
index = confusion_matrix(y_pred, y_true, categories)
#print(index)
num_categories = (len(index)-1)
#print(num_categories)
count = 0

 

for i in categories:
    print(categories[count].upper())
    
    # actual positives
    actual_positives = 0
    for i in index:
        actual_positives += i[count]
    
    # predicted positives
    pred_positives = index[count][count]
    
    # actual negatives
    actual_negatives = (sum(sum(index))) - actual_positives
    
    # predicted negatives
    pred_negatives = actual_negatives + pred_positives - sum(index[count])
    
    
    
    # determine probabilities
    if (pred_positives+pred_negatives) == 0 or actual_positives+actual_negatives == 0:
        correct_class = 0.0
    else:
        correct_class = round((pred_positives+pred_negatives)/(actual_positives+actual_negatives),4)
    if actual_negatives-pred_negatives == 0 or actual_negatives == 0:
        false_pos = 0
    else:
        false_pos = round((actual_negatives-pred_negatives)/actual_negatives,4)
    if  actual_positives-pred_positives == 0 or actual_positives == 0:
        false_neg = 0
    else:
        false_neg = round((actual_positives-pred_positives)/actual_positives,4)
        
    
    print('Actual Positives:',actual_positives,'\t\t\t Probability of Correct classification:',correct_class)
    print('Predicted correctly:',pred_positives,' \t\t Probability of False Positive classification:',false_pos)
    print('Actual Negatives:',actual_negatives,' \t\t\t Probability of False Negative classification:',false_neg)
    print('Predicted correctly:',pred_negatives)
    print('\n')
    
    
    if count < num_categories-1:
        count+=1
    else:
        categories.pop()
        break
